const e='{"documentCount":42,"nextId":42,"documentIds":{"0":"/iyanBase/api-examples.html#runtime-api-examples","1":"/iyanBase/api-examples.html#results","2":"/iyanBase/api-examples.html#theme-data","3":"/iyanBase/api-examples.html#page-data","4":"/iyanBase/api-examples.html#page-frontmatter","5":"/iyanBase/api-examples.html#more","6":"/iyanBase/articles/learning/artificial-intelligence/KAN/kAN.html#kan","7":"/iyanBase/articles/learning/artificial-intelligence/KAN/kAN.html#提出背景","8":"/iyanBase/articles/learning/artificial-intelligence/KAN/kAN.html#细节","9":"/iyanBase/articles/learning/artificial-intelligence/KAN/kAN.html#缺陷","10":"/iyanBase/articles/learning/artificial-intelligence/KAN/kAN.html#总结","11":"/iyanBase/articles/learning/artificial-intelligence/#learning","12":"/iyanBase/articles/learning/artificial-intelligence/transformer/QKV.html#注意力机制","13":"/iyanBase/articles/learning/artificial-intelligence/transformer/QKV.html#_1-对于一维qkv","14":"/iyanBase/articles/learning/artificial-intelligence/transformer/QKV.html#输入q-与ki的点积得到那些vi需要注意-需要多少的注意-权重-把各个vi-权重a-q-k-得到结果","15":"/iyanBase/articles/learning/artificial-intelligence/transformer/QKV.html#_2-高维qkv","16":"/iyanBase/articles/learning/artificial-intelligence/transformer/QKV.html#_3-自注意机制的qkv","17":"/iyanBase/articles/learning/artificial-intelligence/transformer/QKV.html#_2-多头注意力机制","18":"/iyanBase/articles/#articles","19":"/iyanBase/articles/learning/artificial-intelligence/transformer/transformer.html#transformer","20":"/iyanBase/articles/learning/artificial-intelligence/transformer/vit.html#vision-transformer","21":"/iyanBase/articles/learning/artificial-intelligence/transformer/vit.html#解决问题","22":"/iyanBase/articles/learning/artificial-intelligence/transformer/vit.html#步骤","23":"/iyanBase/articles/learning/artificial-intelligence/transformer/vit.html#q-a","24":"/iyanBase/articles/learning/#learning","25":"/iyanBase/articles/programlang/C&C++/4.4虚类.html#虚基类","26":"/iyanBase/articles/programlang/C&C++/4.4虚类.html#作用","27":"/iyanBase/articles/programlang/C&C++/4.4虚类.html#例","28":"/iyanBase/articles/programlang/C&C++/4.4虚类.html#分析","29":"/iyanBase/articles/programlang/C&C++/4.5基类与公有派生类对象的赋值兼容.html#_4-5-基类与公有派生类对象的赋值兼容","30":"/iyanBase/articles/programlang/C&C++/4.5基类与公有派生类对象的赋值兼容.html#例","31":"/iyanBase/articles/programlang/C&C++/4.5基类与公有派生类对象的赋值兼容.html#附","32":"/iyanBase/articles/programlang/C&C++/4.5基类与公有派生类对象的赋值兼容.html#虚-虚基类和虚函数的作用-简练概括版","33":"/iyanBase/articles/technology/4_19面向对象_工厂模式与单例模式.html#单例模式or工厂模式","34":"/iyanBase/articles/technology/4_19面向对象_工厂模式与单例模式.html#详细分析","35":"/iyanBase/articles/technology/4_19面向对象_工厂模式与单例模式.html#单例模式","36":"/iyanBase/articles/technology/4_19面向对象_工厂模式与单例模式.html#工厂模式-factory","37":"/iyanBase/articles/technology/#technology","38":"/iyanBase/markdown-examples.html#markdown-extension-examples","39":"/iyanBase/markdown-examples.html#syntax-highlighting","40":"/iyanBase/markdown-examples.html#custom-containers","41":"/iyanBase/markdown-examples.html#more"},"fieldIds":{"title":0,"titles":1,"text":2},"fieldLength":{"0":[3,1,52],"1":[1,3,1],"2":[2,4,2],"3":[2,4,2],"4":[2,4,2],"5":[1,3,11],"6":[1,1,1],"7":[1,1,20],"8":[1,1,3],"9":[1,1,3],"10":[1,1,1],"11":[1,1,1],"12":[1,1,4],"13":[2,1,1],"14":[9,3,13],"15":[2,3,1],"16":[2,3,47],"17":[2,3,68],"18":[1,1,1],"19":[1,1,17],"20":[2,1,2],"21":[1,2,7],"22":[1,2,22],"23":[3,2,48],"24":[1,1,1],"25":[1,1,1],"26":[1,1,11],"27":[2,1,41],"28":[2,1,75],"29":[3,1,6],"30":[2,3,83],"31":[2,3,1],"32":[5,5,27],"33":[1,1,24],"34":[1,1,1],"35":[1,2,74],"36":[3,2,88],"37":[1,1,1],"38":[3,1,14],"39":[2,3,27],"40":[2,3,21],"41":[1,3,11]},"averageFieldLength":[1.8571428571428572,1.9523809523809523,19.928571428571427],"storedFields":{"0":{"title":"Runtime API Examples","titles":[]},"1":{"title":"Results","titles":["Runtime API Examples"]},"2":{"title":"Theme Data","titles":["Runtime API Examples","Results"]},"3":{"title":"Page Data","titles":["Runtime API Examples","Results"]},"4":{"title":"Page Frontmatter","titles":["Runtime API Examples","Results"]},"5":{"title":"More","titles":["Runtime API Examples"]},"6":{"title":"KAN","titles":[]},"7":{"title":"提出背景","titles":["KAN"]},"8":{"title":"细节","titles":["KAN"]},"9":{"title":"缺陷","titles":["KAN"]},"10":{"title":"总结","titles":["KAN"]},"11":{"title":"Learning","titles":[]},"12":{"title":"注意力机制","titles":[]},"13":{"title":"1.对于一维QKV","titles":["注意力机制"]},"14":{"title":"输入Q,与Ki的点积得到那些Vi需要注意,需要多少的注意(权重),把各个vi*权重a(Q,K)得到结果","titles":["注意力机制","1.对于一维QKV"]},"15":{"title":"2. 高维QKV","titles":["注意力机制","1.对于一维QKV"]},"16":{"title":"3.自注意机制的QKV","titles":["注意力机制","1.对于一维QKV"]},"17":{"title":"2.多头注意力机制","titles":["注意力机制","1.对于一维QKV"]},"18":{"title":"articles","titles":[]},"19":{"title":"transformer","titles":[]},"20":{"title":"Vision Transformer","titles":[]},"21":{"title":"解决问题","titles":["Vision Transformer"]},"22":{"title":"步骤","titles":["Vision Transformer"]},"23":{"title":"Q&amp;A","titles":["Vision Transformer"]},"24":{"title":"Learning","titles":[]},"25":{"title":"虚基类","titles":[]},"26":{"title":"作用","titles":["虚基类"]},"27":{"title":"例：","titles":["虚基类"]},"28":{"title":"分析：","titles":["虚基类"]},"29":{"title":"4.5 基类与公有派生类对象的赋值兼容","titles":[]},"30":{"title":"例:","titles":["4.5 基类与公有派生类对象的赋值兼容"]},"31":{"title":"附:","titles":["4.5 基类与公有派生类对象的赋值兼容"]},"32":{"title":"&quot;虚&quot;,虚基类和虚函数的作用(简练概括版):","titles":["4.5 基类与公有派生类对象的赋值兼容","附:"]},"33":{"title":"单例模式or工厂模式","titles":[]},"34":{"title":"详细分析","titles":["单例模式or工厂模式"]},"35":{"title":"单例模式","titles":["单例模式or工厂模式","详细分析"]},"36":{"title":"工厂模式(factory)","titles":["单例模式or工厂模式","详细分析"]},"37":{"title":"technology","titles":[]},"38":{"title":"Markdown Extension Examples","titles":[]},"39":{"title":"Syntax Highlighting","titles":["Markdown Extension Examples"]},"40":{"title":"Custom Containers","titles":["Markdown Extension Examples"]},"41":{"title":"More","titles":["Markdown Extension Examples"]}},"dirtCount":0,"index":[["jsexport",{"2":{"39":1}}],["javapublic",{"2":{"35":1,"36":3}}],["java",{"2":{"35":2}}],["```",{"2":{"39":1}}],["主函数",{"2":{"36":1}}],["取出实例",{"2":{"36":1}}],["并且用getbean",{"2":{"36":1}}],["并乘以对应key的值",{"2":{"16":1}}],["需要构建spring配置文件",{"2":{"36":1}}],["需要多少的注意",{"0":{"14":1}}],["999",{"2":{"36":1}}],[">",{"2":{"36":3}}],[">speak",{"2":{"30":2}}],["先看看",{"2":{"36":1}}],["工厂",{"2":{"36":1}}],["工厂类本身不需要构造",{"2":{"36":1}}],["工厂模式中用工厂类生产的产品",{"2":{"36":1}}],["工厂模式",{"0":{"36":1}}],["工厂模式控制的是创建过程",{"2":{"33":1}}],["工厂模式适用于创建复杂对象",{"2":{"33":1}}],["负责给bitmap传出数据",{"2":{"35":1}}],["负责给数据载体bitmap接收数据",{"2":{"35":1}}],["成员函数2",{"2":{"35":1}}],["成员函数1",{"2":{"35":1}}],["接下来的部分就是为了实现数据运输船的功能",{"2":{"35":1}}],["返回实例",{"2":{"35":1}}],["返回值为url",{"2":{"35":1}}],["那就创建",{"2":{"35":1}}],["那么程序不知道这个",{"2":{"28":1}}],["那么每组输入有对应自己的wq",{"2":{"16":1}}],["nanyian",{"2":{"36":1}}],["name",{"2":{"36":4}}],["namespace",{"2":{"27":1}}],["num",{"2":{"36":2}}],["null",{"2":{"35":2}}],["new",{"2":{"35":1,"36":4}}],["就是为单例模式服务的公用函数接口",{"2":{"35":1}}],["就用同一个了",{"2":{"27":1,"28":1}}],["启动下一页",{"2":{"35":1}}],["以下运用了spring的ioc特性来实现的工厂模式",{"2":{"36":1}}],["以上代码为从系统文件中获取目标图片",{"2":{"35":1}}],["以vit为例",{"2":{"19":1}}],["获取回调函数参数",{"2":{"35":1}}],["获得q对于全局键值对",{"2":{"14":1}}],["其一次只需定义一个的特性而用到了单例模式",{"2":{"35":1}}],["其中",{"2":{"17":1,"28":1}}],["其中不同的w",{"2":{"17":1}}],["其中的kv是给定的",{"2":{"16":1}}],["其中核心的参数远远小于总量",{"2":{"7":1}}],["提供照片而用到了数据运输船dataservice类",{"2":{"35":1}}],["提出自注意力机制",{"2":{"16":1}}],["提出背景",{"0":{"7":1}}],["展示图片页",{"2":{"35":1}}],["给下一页",{"2":{"35":1}}],["给h次机会",{"2":{"17":1}}],["详细分析",{"0":{"34":1},"1":{"35":1,"36":1}}],["允许多个实例存在",{"2":{"33":1}}],["控制粒度不同",{"2":{"33":1}}],["组合和表示时",{"2":{"33":1}}],["特别是当一个系统需要独立于其产品的创建",{"2":{"33":1}}],["应用场景不同",{"2":{"33":1}}],["下面还会详细分析",{"2":{"33":1}}],["下图为",{"2":{"16":1}}],["而通过getistance",{"2":{"35":1}}],["而工厂模式通过多个工厂方法或类来创建不同类型的对象",{"2":{"33":1}}],["而工厂模式的目的是创建多种类型的对象",{"2":{"33":1}}],["而在多头注意力中",{"2":{"17":1}}],["单例模式的类初始化部分应该如何设置",{"2":{"35":1}}],["单例模式的目的是创建唯一的对象实例",{"2":{"33":1}}],["单例模式",{"0":{"35":1}}],["单例模式控制的是实例的数量",{"2":{"33":1}}],["单例模式适用于全局资源共享",{"2":{"33":1}}],["单例模式通常通过一个静态方法返回唯一实例",{"2":{"33":1}}],["单例模式or工厂模式",{"0":{"33":1},"1":{"34":1,"35":1,"36":1}}],["目的不同",{"2":{"33":1}}],["相同点",{"2":{"33":1}}],["相当于为每个",{"2":{"17":1}}],["确保基类的数据成员只被继承一次",{"2":{"32":1}}],["确保只有一份基类的数据成员被继承",{"2":{"32":1}}],["它允许在派生类中覆盖基类的函数实现",{"2":{"32":1}}],["总的来说",{"2":{"32":1}}],["总结",{"0":{"10":1}}],["指的是在多重继承中避免同名基类的歧义",{"2":{"32":1}}],["指的是函数的动态绑定",{"2":{"32":1}}],["实现对产品输出的选择",{"2":{"36":1}}],["实现方式不同",{"2":{"33":1}}],["实现多态性",{"2":{"32":1}}],["实际调用的是根据对象类型确定的函数实现",{"2":{"32":1}}],["实际指向的是",{"2":{"30":1}}],["实际上i的值是一直在累加的",{"2":{"28":1}}],["实际上的实验证明了",{"2":{"17":1}}],["当一个类继承自多个包含相同数据成员的基类时",{"2":{"32":1}}],["当通过基类指针或引用调用虚函数时",{"2":{"32":1}}],["当多继承的class",{"2":{"28":1}}],["简练概括版",{"0":{"32":1}}],["附",{"0":{"31":1},"1":{"32":1}}],["函数",{"2":{"30":2}}],["由于",{"2":{"30":1}}],["由于不同头对应不同的子空间表示",{"2":{"17":1}}],["为了实现在系统文件中选取图片后",{"2":{"35":1}}],["为了避免菱形继承问题",{"2":{"26":1}}],["为基类对象",{"2":{"30":1}}],["隐式转换",{"2":{"30":1}}],["这点就跟单例模式有异曲同工之妙了",{"2":{"36":1}}],["这是公用继承的一个关键特性",{"2":{"30":1}}],["这里的三个参数都是根据x自己得出的",{"2":{"16":1}}],["类中覆盖的",{"2":{"30":1}}],["类型",{"2":{"30":1}}],["类型转换为animal",{"2":{"30":1}}],["类似nlp问题中输入trans前在encoder前给文本向量添加属性的方式",{"2":{"22":1}}],["类似卷积网络的不同卷积通道",{"2":{"17":1}}],["创建完成",{"2":{"35":1}}],["创建派生类对象",{"2":{"30":1}}],["创建基类对象",{"2":{"30":1}}],["会产生歧义",{"2":{"32":1}}],["会产生不同的子空间表示head",{"2":{"17":1}}],["会根据实际对象的类型来决定调用哪个版本的",{"2":{"30":1}}],["会绑定基类的成员函数",{"2":{"30":1}}],["着派生类中的同名函数若用",{"2":{"30":1}}],["若无",{"2":{"30":1}}],["若用像素作为输入元素",{"2":{"21":1}}],["任何的",{"2":{"29":1}}],["派生类保留了除了基类构造构造函数和析构函数之外的所有函数和成员",{"2":{"29":1}}],["公有继承的派生类",{"2":{"30":1}}],["公有继承",{"2":{"29":1}}],["概括",{"2":{"29":1}}],["概述",{"2":{"19":1}}],["基类的speak",{"2":{"30":1}}],["基类的成员函数",{"2":{"28":1}}],["基类与公有派生类对象的赋值兼容",{"0":{"29":1},"1":{"30":1,"31":1,"32":1}}],["5",{"0":{"29":1},"1":{"30":1,"31":1,"32":1},"2":{"30":2}}],["4",{"0":{"29":1},"1":{"30":1,"31":1,"32":1},"2":{"39":1}}],["还是c的",{"2":{"28":1}}],["可在外部调用getrdresult函数来获取产品",{"2":{"36":1}}],["可能产生歧义",{"2":{"28":1}}],["可以实现动态绑定",{"2":{"30":1}}],["可以让中注意力权重之和为1",{"2":{"16":1}}],["可以是全连接等方法",{"2":{"16":1}}],["中",{"2":{"36":1}}],["中的",{"2":{"28":1}}],["中可能有对于a构造函数的重载",{"2":{"26":1}}],["没有使class",{"2":{"28":1}}],["没什么可以训练的地方",{"2":{"16":1}}],["同样的",{"2":{"28":1}}],["累加的i是同一个地址",{"2":{"28":1}}],["时",{"2":{"28":1,"29":1}}],["故当程序运行时",{"2":{"28":1}}],["两个i不是指向同一个内存地址的i",{"2":{"28":1}}],["两次构造函数",{"2":{"28":1}}],["两者性能相似",{"2":{"23":1}}],["经过b",{"2":{"28":1}}],["因为",{"2":{"30":1}}],["因为共有继承不继承构造函数",{"2":{"30":1}}],["因为softmax",{"2":{"14":1}}],["因此需要下面的代码来根据url在设备中检索",{"2":{"35":1}}],["因此可以实现动态绑定",{"2":{"30":1}}],["因此这里需要定义dog",{"2":{"30":1}}],["因此",{"2":{"28":1}}],["都可以提高代码的可维护性和可复用性",{"2":{"33":1}}],["都是设计模式中的创建型模式",{"2":{"33":1}}],["都是访问的同一个实例",{"2":{"27":1,"28":1}}],["都会全局改变他们继承自的基类中a的值",{"2":{"28":1}}],["也就是说",{"2":{"28":1}}],["有无构造函数",{"2":{"35":1}}],["有virtual属性",{"2":{"30":1}}],["有结果",{"2":{"28":1}}],["有基类animal",{"2":{"30":1}}],["有基类a",{"2":{"28":1}}],["有梯度消失",{"2":{"7":1}}],["分析",{"0":{"28":1}}],["分类属性",{"2":{"22":1}}],["不同点",{"2":{"33":1}}],["不知道是哪个il>>菱形问题",{"2":{"27":1,"28":1}}],["不会再次构造了",{"2":{"27":1,"28":1}}],["+=",{"2":{"27":4,"28":5}}],["从而避免了重复和歧义",{"2":{"27":1,"28":1}}],["0xffff",{"2":{"36":1}}],["0",{"2":{"27":2,"28":2,"30":1}}],["0~1",{"2":{"14":1}}],["虚函数是实现多态性的关键",{"2":{"32":1}}],["虚函数允许在派生类中覆盖基类的虚函数实现",{"2":{"32":1}}],["虚函数的",{"2":{"32":1}}],["虚函数",{"2":{"32":1}}],["虚函数表的继承",{"2":{"27":1}}],["虚",{"0":{"32":1},"2":{"32":2}}],["虚拟基类",{"2":{"27":2,"28":2}}],["虚基类是解决多重继承中的菱形继承问题的方法",{"2":{"32":1}}],["虚基类的",{"2":{"32":1}}],["虚基类和虚函数的作用",{"0":{"32":1}}],["虚基类",{"0":{"25":1},"1":{"26":1,"27":1,"28":1},"2":{"32":1}}],["例",{"0":{"27":1,"30":1}}],["使得他们的父级其实为同一个",{"2":{"28":1}}],["使得d中的某些值不确定",{"2":{"26":1}}],["使用的是静态工厂类的方法",{"2":{"36":1}}],["使用单例模式",{"2":{"35":1}}],["使用encoder模块",{"2":{"22":1}}],["使用encoder",{"2":{"19":1}}],["使用注意力机制的模型架构",{"2":{"19":1}}],["使用多级层一次线性函数",{"2":{"7":1}}],["导致内部成员值不同",{"2":{"26":1}}],["导致在一些任务下",{"2":{"7":1}}],["又因为b",{"2":{"26":1}}],["作用",{"0":{"26":1}}],["作为注意力权重",{"2":{"17":1}}],["能用cv一般用的全局平均池化吗",{"2":{"23":1}}],["能在注意力计算中能从别的embemdding学习到有用的信息",{"2":{"23":1}}],["直接与patchembed相加",{"2":{"23":1}}],["直接构建一个可学习的矩阵",{"2":{"23":1}}],["假设还是",{"2":{"23":1}}],["假设原图尺寸",{"2":{"23":1}}],["里加入位置编码的",{"2":{"23":1}}],["输出",{"2":{"30":7}}],["输出为patch",{"2":{"23":1}}],["输入q",{"0":{"14":1}}],["768",{"2":{"23":4}}],["再通过",{"2":{"23":1}}],["再乘对应key的value",{"2":{"16":1}}],["$3",{"2":{"23":1}}],["$",{"2":{"23":1}}],["$$",{"2":{"22":1,"23":2}}],["则生成196个",{"2":{"23":1}}],["位置编码是如何加入的",{"2":{"23":1}}],["希望",{"2":{"23":1}}],["export",{"2":{"39":1}}],["extensions",{"2":{"38":1,"41":1}}],["extension",{"0":{"38":1},"1":{"39":1,"40":1,"41":1}}],["examples",{"0":{"0":1,"38":1},"1":{"1":1,"2":1,"3":1,"4":1,"5":1,"39":1,"40":1,"41":1}}],["emsp",{"2":{"32":3}}],["embedding",{"2":{"23":1}}],["embeding分类",{"2":{"23":1}}],["embbding",{"2":{"23":1}}],["endl",{"2":{"27":11,"28":13,"30":7}}],["引入",{"2":{"23":1}}],["借鉴bert",{"2":{"23":1}}],["所以会调用",{"2":{"30":1}}],["所以置信度为",{"2":{"14":1}}],["所有的embedding都在encoder里面做qkv计算",{"2":{"23":1}}],["连接一个全连接层",{"2":{"22":1}}],["加入位置编码",{"2":{"22":1}}],["的构造函数",{"2":{"30":1}}],["的i",{"2":{"28":2}}],["的基类指向同一片内存",{"2":{"28":1}}],["的改变",{"2":{"28":1}}],["的线性投影层",{"2":{"23":1}}],["的一维向量",{"2":{"23":1}}],["的token了",{"2":{"22":1}}],["的维度上",{"2":{"17":1}}],["getbean",{"2":{"36":1}}],["getbitmap",{"2":{"35":1}}],["get",{"2":{"36":1}}],["getrdresult",{"2":{"36":3}}],["getmbitmap",{"2":{"35":1}}],["getinstance",{"2":{"35":4}}],["getcontentresolver",{"2":{"35":1}}],["getdata",{"2":{"35":2}}],["getage",{"2":{"30":3}}],["gt",{"2":{"22":2,"36":3}}],["gpu计算效率不高",{"2":{"9":1}}],["y",{"2":{"22":1}}],["图片维度从",{"2":{"22":1}}],["更符合原生transformer的操作",{"2":{"22":1}}],["将这些基类声明为虚基类可以解决这一问题",{"2":{"32":1}}],["将",{"2":{"30":1}}],["将分类结果输出",{"2":{"22":1}}],["将视觉问题适配用于解决nlp问题的transformer模型",{"2":{"22":1}}],["将图片切成较小维度的path",{"2":{"22":1}}],["将所有头的注意力表示合并得到最终输出",{"2":{"17":1}}],["步骤",{"0":{"22":1}}],["序列长度会过长",{"2":{"21":1}}],["序列长度较短",{"2":{"21":1}}],["传统trans解决nlp问题",{"2":{"21":1}}],["解决问题",{"0":{"21":1}}],["😶‍🌫️video",{"2":{"20":1}}],["一次输入输出",{"2":{"19":1}}],["无论是通过b路径还是c路径访问a的成员",{"2":{"27":1,"28":1}}],["无需考虑以前时刻的输出",{"2":{"19":1}}],["无法针对不同的位置关系",{"2":{"17":1}}],["只有一个",{"2":{"33":1}}],["只需在以前的输出上不断接龙",{"2":{"19":1}}],["只用decoder的结构",{"2":{"19":1}}],["只是用encoder的结构",{"2":{"19":1}}],["只关心输入x中元素的内在联系",{"2":{"16":1}}],["适用于语言翻译等要求输入输出严格对应的任务",{"2":{"19":1}}],["减少每个头输入的维度",{"2":{"17":1}}],["让各个头的wqi",{"2":{"17":1}}],["本质",{"2":{"17":1}}],["本质上",{"2":{"16":1}}],["上列qkv矩阵",{"2":{"17":1}}],["把谁的输出当作模型输出结果",{"2":{"23":1}}],["把path转换为token",{"2":{"22":1}}],["把x切h是受到cnn的启发",{"2":{"17":1}}],["把原始输入x投影到size",{"2":{"17":1}}],["把各个vi",{"0":{"14":1}}],["是一个虚函数",{"2":{"30":1}}],["是一个可训练的权重矩阵",{"2":{"17":1}}],["是派生类b父类",{"2":{"28":1}}],["是根据",{"2":{"16":1}}],["最后把zi用wo权重的方式合并",{"2":{"17":1}}],["最后",{"2":{"17":1}}],["最终得到",{"2":{"16":1}}],["另一头则偏向全局依赖等",{"2":{"17":1}}],["比如某一头可能更关注局部位置关系",{"2":{"17":1}}],["在内部就声明了一个实例dataservice",{"2":{"35":1}}],["在这段安卓开发代码中",{"2":{"35":1}}],["在运行时",{"2":{"30":1}}],["在实验中",{"2":{"23":1}}],["在初始时候初始化随机",{"2":{"23":1}}],["在所有的输出中",{"2":{"23":1}}],["在低维的x",{"2":{"17":1}}],["在计算注意力时就会自动关注不同的位置和语义信息",{"2":{"17":1}}],["在标准的自注意力机制中",{"2":{"17":1}}],["然后在每个head",{"2":{"17":1}}],["highlighted",{"2":{"39":2}}],["highlighting",{"0":{"39":1},"2":{"39":2}}],["hashmap",{"2":{"36":1}}],["h为头数",{"2":{"17":1}}],["h",{"2":{"17":3}}],["head",{"2":{"17":2}}],["xml",{"2":{"36":2}}],["x26",{"2":{"30":2}}],["x$$",{"2":{"22":1}}],["x",{"2":{"17":3}}],["x3c",{"2":{"0":8,"27":53,"28":52,"30":34,"36":6}}],["生成一个子表示",{"2":{"17":1}}],["头",{"2":{"17":1}}],["我们首先将输入通过不同的线性变换映射到不同的子空间表示",{"2":{"17":1}}],["我们计算它们之间的相似性得分",{"2":{"17":1}}],["施加不同的注意力模式",{"2":{"17":1}}],["前后关系等",{"2":{"17":1}}],["远距离",{"2":{"17":1}}],["但应用于视觉领域",{"2":{"21":1}}],["但这种方式对于所有单词对都使用了相同的注意力计算方式",{"2":{"17":1}}],["但是d多继承自c",{"2":{"26":1}}],["但是其过程中的一些线性函数也需要一次函数来拟合",{"2":{"7":1}}],["但是并不能彻底解决",{"2":{"7":1}}],["普通自注意力机制的升级版",{"2":{"17":1}}],["普通的点积qkv",{"2":{"16":1}}],["逐个与序列中的其他项的ki",{"2":{"16":1}}],["对象",{"2":{"30":1}}],["对于整体的效果也不错",{"2":{"17":1}}],["对于序列中任意两个单词对",{"2":{"17":1}}],["对于一维qkv",{"0":{"13":1},"1":{"14":1,"15":1,"16":1,"17":1}}],["对q1",{"2":{"16":1}}],["值得注意的是",{"2":{"16":1}}],["点积",{"2":{"16":1}}],["根据",{"2":{"16":1}}],["得出模型输出",{"2":{"23":1}}],["得出答案",{"2":{"16":1}}],["得到zi",{"2":{"17":1}}],["得到不同的注意力分布",{"2":{"17":1}}],["得到output",{"2":{"16":1}}],["得到结果",{"0":{"14":1}}],["多态性演示",{"2":{"30":1}}],["多头注意力机制",{"0":{"17":1}}],["多组输入组成的矩阵",{"2":{"16":1}}],["多层mlp+激活函数",{"2":{"7":1}}],["如配置管理类",{"2":{"33":1}}],["如果dataservice在之前未被创建",{"2":{"35":1}}],["如果未使用虚类",{"2":{"28":1}}],["如果基类构造过",{"2":{"27":1,"28":1}}],["如果x为高维",{"2":{"16":1}}],["如何在patchembedding",{"2":{"23":1}}],["如近邻",{"2":{"17":1}}],["如gpt等模型有千亿以上的参数",{"2":{"7":1}}],["注意不是构造函数",{"2":{"35":1}}],["注意",{"2":{"16":1}}],["注意力机制",{"0":{"12":1},"1":{"13":1,"14":1,"15":1,"16":1,"17":1}}],["warning",{"2":{"40":6}}],["with",{"2":{"39":1}}],["w",{"2":{"17":3}}],["wvi以不同的随机种子发芽",{"2":{"17":1}}],["wv",{"2":{"16":2}}],["wki",{"2":{"17":1}}],["wk",{"2":{"16":2}}],["works",{"2":{"0":1}}],["训练出x对应的wq",{"2":{"16":1}}],["通过训练",{"2":{"16":1}}],["自注意机制的qkv",{"0":{"16":1}}],["30",{"2":{"28":1}}],["3的注意力得分",{"2":{"16":1}}],["3经过学习得到的k",{"2":{"16":1}}],["3",{"0":{"16":1},"2":{"19":1,"22":1,"30":2}}],["高维qkv",{"0":{"15":1}}],["20",{"2":{"28":2}}],["224$$224$$3",{"2":{"23":1}}],["2",{"0":{"15":1,"17":1},"2":{"16":2,"19":1,"36":2}}],["之间",{"2":{"14":1}}],["即派生类对象可以",{"2":{"30":1}}],["即可以实现overdrive重写",{"2":{"30":1}}],["即为一次生成的全过程",{"2":{"19":1}}],["即",{"2":{"16":1}}],["即计算与这三者的关联度",{"2":{"16":1}}],["即计算根据",{"2":{"16":1}}],["即a为b",{"2":{"26":1}}],["即a",{"2":{"14":1}}],["即使后人提出dropout",{"2":{"7":1}}],["计算",{"2":{"16":1}}],["计算q对全局k的关联程度",{"2":{"14":1}}],["计算比较复杂",{"2":{"9":1}}],["q4",{"2":{"23":1}}],["q3",{"2":{"23":1}}],["q2",{"2":{"23":1}}],["q1",{"2":{"23":1}}],["quot",{"0":{"32":2},"2":{"17":2,"28":4,"30":2,"32":4,"36":4}}],["q",{"0":{"14":1,"23":1},"2":{"14":3}}],["权重a",{"0":{"14":1}}],["权重",{"0":{"14":1}}],["与ki的点积得到那些vi需要注意",{"0":{"14":1}}],["123其中在",{"2":{"36":1}}],["1234567",{"2":{"36":1,"39":1}}],["123456789output",{"2":{"39":1}}],["1234567891011工厂模式中的",{"2":{"36":1}}],["1234567891011那么",{"2":{"35":1}}],["1234567891011121314在ioc特性中",{"2":{"36":1}}],["123456789101112131415其中",{"2":{"35":1}}],["12345678910111213141516171819output",{"2":{"40":1}}],["12345678910111213141516171819202122",{"2":{"35":1}}],["1234567891011121314151617181920212223242526272829303132333435363738394041",{"2":{"27":1}}],["123456789101112131415161718对于多态性演示",{"2":{"30":1}}],["1234567891011121314151617",{"2":{"30":2}}],["12345678910111213141516",{"2":{"0":1}}],["12345678910111213运行结果",{"2":{"28":1}}],["12345678910111213b",{"2":{"28":1}}],["12345678",{"2":{"28":1}}],["12345678a的派生类class",{"2":{"28":1}}],["12345即在进入构造函数b",{"2":{"28":1}}],["1在这里发生了动态绑定",{"2":{"30":1}}],["1这里发生了一个隐式类型转换",{"2":{"30":1}}],["10",{"2":{"27":4,"28":7}}],["196",{"2":{"23":2}}],["16",{"2":{"23":4}}],["1与整个序列的关联度表output",{"2":{"16":1}}],["1与全局的关联度的方法",{"2":{"16":1}}],["1对于",{"2":{"16":1}}],["1计算出的q",{"2":{"16":1}}],["1得出的q",{"2":{"16":2}}],["1",{"0":{"13":1},"1":{"14":1,"15":1,"16":1,"17":1},"2":{"16":2,"17":1,"21":1,"36":3}}],["来调用工厂类中的公用静态接口",{"2":{"36":1}}],["来直接自动创建实例",{"2":{"36":1}}],["来创建",{"2":{"35":1}}],["来希望模型能匹配到不同的模式",{"2":{"17":1}}],["来确定自己内部元素之间的关联度",{"2":{"16":1}}],["来得出结果",{"2":{"12":1}}],["来拟合非线性函数",{"2":{"7":1}}],["ki的点积的softmax",{"2":{"16":1}}],["k",{"0":{"14":1},"2":{"14":2}}],["k之间的关系",{"2":{"12":1}}],["kan网络的最大特征就是用样条曲线函数直接拟合线性函数",{"2":{"7":1}}],["kan",{"0":{"6":1},"1":{"7":1,"8":1,"9":1,"10":1}}],["捕捉q",{"2":{"12":1}}],["缺陷",{"0":{"9":1}}],["偏置项",{"2":{"8":1}}],["激活函数",{"2":{"8":1}}],["细节",{"0":{"8":1}}],["用factory",{"2":{"36":1}}],["用",{"2":{"36":1}}],["用dataservice的内部函数静态函数",{"2":{"35":1}}],["用于让外部在需要dataservice实例的时候无法在外部创建",{"2":{"35":1}}],["用于封装和管理对象的创建",{"2":{"33":1}}],["用于合并多头信息",{"2":{"17":1}}],["用全连接层对class",{"2":{"23":1}}],["用线性投射层成将图片信息变为向量",{"2":{"22":1}}],["用剪枝来简化网络结构",{"2":{"7":1}}],["用正弦函数来拟合任意线性函数",{"2":{"7":1}}],["何不直接使用一次函数来拟合非线性函数",{"2":{"7":1}}],["模型参数量巨大",{"2":{"7":1}}],["line",{"2":{"39":1}}],["like",{"2":{"39":1}}],["list",{"2":{"5":1,"41":1}}],["labrador",{"2":{"30":2}}],["lt",{"2":{"28":12,"36":2}}],["learning",{"0":{"11":1,"24":1}}],["l1等方法来应对上述问题",{"2":{"7":1}}],["梯度爆炸问题",{"2":{"7":1}}],["open",{"2":{"35":1}}],["override",{"2":{"30":2}}],["only",{"2":{"19":1}}],["o",{"2":{"17":2}}],["out",{"2":{"5":1,"36":1,"41":1}}],["of",{"2":{"0":2,"5":1,"38":1,"41":1}}],["rdproduce",{"2":{"36":5}}],["rollnum",{"2":{"36":4}}],["rolldoge>",{"2":{"36":1}}],["rolldogefactory",{"2":{"36":2}}],["rolldogefact",{"2":{"36":2}}],["rolldoge",{"2":{"36":9}}],["rolldoge类",{"2":{"36":1}}],["requestcode",{"2":{"35":1}}],["return",{"2":{"27":1,"28":1,"30":2,"35":2,"36":1,"39":2}}],["results",{"0":{"1":1},"1":{"2":1,"3":1,"4":1},"2":{"0":1}}],["runtime",{"0":{"0":1},"1":{"1":1,"2":1,"3":1,"4":1,"5":1},"2":{"0":1,"5":1}}],["==",{"2":{"22":1,"35":3}}],["=",{"2":{"0":1,"17":3,"27":5,"28":12,"30":2,"35":4,"36":8}}],["features",{"2":{"39":1}}],["fact",{"2":{"36":1}}],["factorywithioc",{"2":{"36":1}}],["factory",{"0":{"36":1},"2":{"36":2}}],["function",{"2":{"32":1}}],["full",{"2":{"5":1,"41":1}}],["foo",{"2":{"27":7,"28":8}}],["for",{"2":{"0":1,"5":1,"41":1}}],["f",{"2":{"14":1}}],["frontmatter",{"0":{"4":1},"2":{"0":3,"4":1}}],["from",{"2":{"0":1}}],["files",{"2":{"0":1}}],["value",{"2":{"36":1}}],["void",{"2":{"27":4,"28":4,"30":5,"35":1,"36":1}}],["virtual",{"2":{"27":2,"28":2,"30":2,"32":2}}],["vision",{"0":{"20":1},"1":{"21":1,"22":1,"23":1}}],["vi做qkv方程计算",{"2":{"16":1}}],["vitepress",{"2":{"0":2,"38":1,"39":1}}],["vue",{"2":{"0":1}}],["msg",{"2":{"39":2}}],["method=",{"2":{"36":2}}],["media",{"2":{"35":1}}],["mediastore",{"2":{"35":1}}],["markdown",{"0":{"38":1},"1":{"39":1,"40":1,"41":1},"2":{"38":1,"41":1}}],["map",{"2":{"36":1}}],["main",{"2":{"0":1,"27":1,"28":1,"30":1,"36":1}}],["mbitmap",{"2":{"35":5}}],["mlp为基础的网络需要大量的参数来使得网络足够智能",{"2":{"7":1}}],["mlp为基础的架构下",{"2":{"7":1}}],["more",{"0":{"5":1,"41":1}}],["md```js",{"2":{"39":1}}],["md",{"2":{"0":2,"40":1}}],["is",{"2":{"40":10}}],["id",{"2":{"36":5}}],["images",{"2":{"35":1}}],["import",{"2":{"0":1}}],["if",{"2":{"35":3}}],["iostream>",{"2":{"27":1}}],["i上分别计算自注意力",{"2":{"17":1}}],["i对应不同的线性变换",{"2":{"17":1}}],["i=1",{"2":{"17":1}}],["i",{"2":{"17":5,"27":13,"28":24}}],["info",{"2":{"40":4}}],["input",{"2":{"39":1,"40":1}}],["instance",{"2":{"35":2}}],["integer",{"2":{"36":6}}],["intentdata的数据",{"2":{"35":1}}],["int",{"2":{"27":2,"28":2,"30":5}}],["include",{"2":{"27":1}}],["in",{"2":{"0":1,"38":1}}],["it",{"2":{"0":1}}],["custom",{"0":{"40":1}}],["current",{"2":{"0":1}}],["c++",{"2":{"30":1}}],["c++class",{"2":{"28":1}}],["c继承自虚类",{"2":{"28":1}}],["cat",{"2":{"30":5}}],["callfoo",{"2":{"27":2,"28":2}}],["called",{"2":{"27":4,"28":11,"30":2}}],["can",{"2":{"0":1}}],["classpathxmlapplicationcontext",{"2":{"36":1}}],["class=",{"2":{"36":1}}],["class",{"2":{"27":4,"28":3,"32":1,"35":2,"36":3}}],["cls",{"2":{"23":3}}],["cppint",{"2":{"30":1}}],["cppanimalptr",{"2":{"30":1}}],["cppanimal",{"2":{"30":1}}],["cppa",{"2":{"28":2}}],["cppclass",{"2":{"28":2,"30":2}}],["cpp",{"2":{"27":1}}],["c",{"2":{"26":1,"27":6,"28":13}}],["c的基类",{"2":{"26":1}}],["com",{"2":{"36":1}}],["cout",{"2":{"27":11,"28":13,"30":7}}],["containers",{"0":{"40":1}}],["concat",{"2":{"17":1}}],["constructor",{"2":{"27":4,"28":11,"30":2,"36":2}}],["const",{"2":{"0":1}}],["code",{"2":{"35":1}}],["codemultihead",{"2":{"17":1}}],["codeattention",{"2":{"17":1}}],["copy",{"2":{"17":2}}],["check",{"2":{"5":1,"41":1}}],["dangerous",{"2":{"40":2}}],["danger",{"2":{"40":2}}],["dazhusensi",{"2":{"36":1}}],["dalusensei",{"2":{"36":1}}],["dataservice",{"2":{"35":12}}],["data",{"0":{"2":1,"3":1},"2":{"0":3,"35":2,"39":2}}],["dog",{"2":{"30":21}}],["documentation",{"2":{"5":1,"41":1}}],["d",{"2":{"27":6,"28":9}}],["details",{"2":{"40":4}}],["default",{"2":{"39":2}}],["decoder",{"2":{"19":1}}],["decoder的transformer结构",{"2":{"19":1}}],["demonstrates",{"2":{"0":1,"38":1}}],["shiki",{"2":{"39":1}}],["showbreed",{"2":{"30":2}}],["syntax",{"0":{"39":1},"2":{"39":1}}],["synchronized",{"2":{"35":1}}],["system",{"2":{"36":1}}],["spring",{"2":{"36":1}}],["speaks",{"2":{"30":2}}],["speak",{"2":{"30":9}}],["static",{"2":{"35":2,"36":4}}],["startactivity",{"2":{"35":1}}],["string",{"2":{"30":3,"36":3}}],["std",{"2":{"27":15,"28":14}}],["setmbitmap",{"2":{"35":2}}],["setup>",{"2":{"0":1}}],["selfattention",{"2":{"17":1}}],["script>",{"2":{"0":1}}],["script",{"2":{"0":1}}],["site",{"2":{"0":1}}],["some",{"2":{"0":1,"38":1}}],["additional",{"2":{"39":1}}],["applicationcontext",{"2":{"36":3}}],["apis",{"2":{"0":1,"5":1}}],["api",{"0":{"0":1},"1":{"1":1,"2":1,"3":1,"4":1,"5":1},"2":{"0":1}}],["args",{"2":{"36":1}}],["arg>",{"2":{"36":1}}],["arg",{"2":{"36":1}}],["articles",{"0":{"18":1}}],["activity",{"2":{"35":1}}],["access",{"2":{"0":1}}],["ab",{"2":{"35":1}}],["a调用",{"2":{"30":1}}],["age",{"2":{"30":13}}],["an",{"2":{"40":2}}],["animalptr",{"2":{"30":4}}],["animal",{"2":{"30":11}}],["and",{"2":{"0":2}}],["a的复制品",{"2":{"28":1}}],["a4",{"2":{"23":1}}],["a3",{"2":{"23":1}}],["a2",{"2":{"23":1}}],["a1",{"2":{"23":1}}],["a",{"0":{"23":1},"2":{"27":6,"28":6,"40":8}}],["amp",{"0":{"23":1},"2":{"30":1}}],["attention",{"2":{"17":2}}],["tip",{"2":{"40":4}}],["technology",{"0":{"37":1}}],["test",{"2":{"36":1}}],["try",{"2":{"35":1}}],["transformer",{"0":{"19":1,"20":1},"1":{"21":1,"22":1,"23":1}}],["token的方法是直接从nlp借鉴过来的",{"2":{"23":1}}],["to",{"2":{"0":1}}],["theme",{"0":{"2":1},"2":{"0":4,"2":1}}],["the",{"2":{"0":3,"5":2,"38":1,"41":2}}],["this",{"2":{"0":1,"35":2,"36":3,"38":1,"40":10}}],["block",{"2":{"40":2}}],["box",{"2":{"40":2}}],["both",{"2":{"0":1}}],["built",{"2":{"38":1}}],["bitmap",{"2":{"35":5}}],["base",{"2":{"32":1}}],["barks",{"2":{"30":4}}],["breed",{"2":{"30":10}}],["b",{"2":{"26":1,"27":5,"28":9}}],["bean>",{"2":{"36":1}}],["bean",{"2":{"36":3}}],["be",{"2":{"0":1}}],["by",{"2":{"0":1,"38":1,"39":1}}],["using",{"2":{"27":1}}],["used",{"2":{"0":1}}],["usedata",{"2":{"0":3}}],["usage",{"2":{"0":1}}],["powered",{"2":{"39":1}}],["put",{"2":{"36":2}}],["public",{"2":{"27":8,"28":8,"30":3,"35":4,"36":3}}],["patchsize取",{"2":{"23":1}}],["patch是如何变为类似nlp的token的",{"2":{"23":1}}],["patchx$$patchy$$特征数",{"2":{"22":1}}],["patch数量个",{"2":{"22":1}}],["page",{"0":{"3":1,"4":1},"2":{"0":7,"3":1,"38":1}}],["ps",{"2":{"17":1}}],["println",{"2":{"36":1}}],["private",{"2":{"30":1,"35":1,"36":4}}],["provides",{"2":{"39":1}}],["provided",{"2":{"0":1,"38":1}}],["protected",{"2":{"30":1}}],["pre>",{"2":{"0":6}}]],"serializationVersion":2}';export{e as default};
